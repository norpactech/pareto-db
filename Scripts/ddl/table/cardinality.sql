-- ---------------------------------------------------------------------------------------
-- Table: pareto.cardinality. Generated by Pareto Factoryâ„¢ "Be Consistent"
-- ---------------------------------------------------------------------------------------
DROP TABLE IF EXISTS pareto.cardinality CASCADE;

CREATE TABLE pareto.cardinality (
  id                               UUID             NOT NULL    DEFAULT GEN_RANDOM_UUID(), 
  id_tenant                        UUID             NOT NULL, 
  id_property                      UUID             NOT NULL, 
  id_data_object                   UUID             NOT NULL, 
  id_rt_cardinality                UUID             NOT NULL, 
  id_rt_cardinality_strength       UUID             NOT NULL, 
  has_referential_action           BOOLEAN          NOT NULL, 
  created_at                       TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP, 
  created_by                       VARCHAR(32)      NOT NULL, 
  updated_at                       TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP, 
  updated_by                       VARCHAR(32)      NOT NULL, 
  is_active                        BOOLEAN          NOT NULL    DEFAULT TRUE
);

ALTER TABLE pareto.cardinality ADD PRIMARY KEY (id);

CREATE UNIQUE INDEX cardinality_alt_key
    ON pareto.cardinality(id_tenant, id_property, id_data_object);

ALTER TABLE pareto.cardinality
  ADD CONSTRAINT cardinality_id_tenant
  FOREIGN KEY (id_tenant)
  REFERENCES pareto.tenant(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.cardinality
  ADD CONSTRAINT cardinality_id_property
  FOREIGN KEY (id_property)
  REFERENCES pareto.property(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.cardinality
  ADD CONSTRAINT cardinality_id_data_object
  FOREIGN KEY (id_data_object)
  REFERENCES pareto.data_object(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.cardinality
  ADD CONSTRAINT cardinality_id_rt_cardinality
  FOREIGN KEY (id_rt_cardinality)
  REFERENCES pareto.ref_tables(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.cardinality
  ADD CONSTRAINT cardinality_id_rt_cardinality_strength
  FOREIGN KEY (id_rt_cardinality_strength)
  REFERENCES pareto.ref_tables(id)
  ON DELETE CASCADE;

CREATE TRIGGER update_at
  BEFORE UPDATE ON pareto.cardinality 
    FOR EACH ROW
      EXECUTE FUNCTION update_at();

ALTER TABLE pareto.cardinality ENABLE ROW LEVEL SECURITY;
CREATE POLICY tenant_isolation_policy ON pareto.cardinality
  FOR ALL TO web_update
    USING (id_tenant = current_setting('app.current_tenant')::uuid);
