-- ---------------------------------------------------------------------------------------
-- Table: pareto.data_index_property. Generated by Pareto Factoryâ„¢ "Be Consistent"
-- ---------------------------------------------------------------------------------------
DROP TABLE IF EXISTS pareto.data_index_property CASCADE;

CREATE TABLE pareto.data_index_property (
  id                               UUID             NOT NULL    DEFAULT GEN_RANDOM_UUID(), 
  id_tenant                        UUID             NOT NULL, 
  id_data_index                    UUID             NOT NULL, 
  id_property                      UUID             NOT NULL, 
  id_rt_sort_order                 UUID             NOT NULL, 
  sequence                         INTEGER          NOT NULL, 
  created_at                       TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP, 
  created_by                       VARCHAR(32)      NOT NULL, 
  updated_at                       TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP, 
  updated_by                       VARCHAR(32)      NOT NULL, 
  is_active                        BOOLEAN          NOT NULL    DEFAULT TRUE
);

ALTER TABLE pareto.data_index_property ADD PRIMARY KEY (id);

CREATE UNIQUE INDEX data_index_property_alt_key
    ON pareto.data_index_property(id_tenant, id_data_index, id_property);

ALTER TABLE pareto.data_index_property
  ADD CONSTRAINT data_index_property_id_tenant
  FOREIGN KEY (id_tenant)
  REFERENCES pareto.tenant(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.data_index_property
  ADD CONSTRAINT data_index_property_id_data_index
  FOREIGN KEY (id_data_index)
  REFERENCES pareto.data_index(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.data_index_property
  ADD CONSTRAINT data_index_property_id_property
  FOREIGN KEY (id_property)
  REFERENCES pareto.property(id)
  ON DELETE CASCADE;
    
ALTER TABLE pareto.data_index_property
  ADD CONSTRAINT data_index_property_id_rt_sort_order
  FOREIGN KEY (id_rt_sort_order)
  REFERENCES pareto.ref_tables(id)
  ON DELETE CASCADE;

CREATE TRIGGER update_at
  BEFORE UPDATE ON pareto.data_index_property 
    FOR EACH ROW
      EXECUTE FUNCTION update_at();

ALTER TABLE pareto.data_index_property ENABLE ROW LEVEL SECURITY;
CREATE POLICY tenant_isolation_policy ON pareto.data_index_property
  FOR ALL TO web_update
    USING (id_tenant = current_setting('app.current_tenant')::uuid);
